import { useForm } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";
import * as yup from "yup";
import { useState } from "react";
import toast from "react-hot-toast";


// ‚úÖ Schema validation
const schema = yup.object({
  fullName: yup.string().required("‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏á‡∏Ñ‡πà‡∏∞‡∏•‡∏π‡∏Å"),
  email: yup.string().email("‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á").required("‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏∞"),
  phone: yup.string().required("‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏´‡πâ‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏á"),
  position: yup.string().required("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£"),
  experience: yup.string().required("‡πÉ‡∏™‡πà‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏°‡∏≤‡∏ô‡∏¥‡∏î‡∏ô‡∏∂‡∏á‡∏•‡∏π‡∏Å"),
  workPermit: yup.boolean(),
  permitNumber: yup.string().when("workPermit", {
    is: true,
    then: (schema) => schema.required("‡πÉ‡∏™‡πà‡πÄ‡∏•‡∏Ç Work Permit ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏∞"),
  }),
  agree: yup.boolean().oneOf([true], "‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡πà‡∏∞"),
});

export default function JobApplicationForm() {
  const [isSubmitting, setIsSubmitting] = useState(false);

  const {
    register,
    handleSubmit,
    watch,
    reset,
    formState: { errors },
  } = useForm({
    resolver: yupResolver(schema),
  });

  const onSubmit = (data) => {
    setIsSubmitting(true);
    setTimeout(() => {
      toast.success("‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ üíº‚ú®");
      console.log(data);
      setIsSubmitting(false);
      reset();
    }, 2000);
  };

  const hasWorkPermit = watch("workPermit");

  return (
    <form
      onSubmit={handleSubmit(onSubmit)}
      className="max-w-xl mx-auto bg-white shadow p-6 rounded space-y-4"
    >
      <h2 className="text-2xl font-bold mb-4">üìÑ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô</h2>

      <div>
        <label>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</label>
        <input {...register("fullName")} className="w-full border px-3 py-2 rounded focus:outline-none focus:ring focus:ring-blue-300;" />
        <p className="text-red-500 text-sm">{errors.fullName?.message}</p>
      </div>

      <div>
        <label>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</label>
        <input {...register("email")} className="w-full border px-3 py-2 rounded focus:outline-none focus:ring focus:ring-blue-300;" />
        <p className="text-red-500 text-sm">{errors.email?.message}</p>
      </div>

      <div>
        <label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</label>
        <input {...register("phone")} className="w-full border px-3 py-2 rounded focus:outline-none focus:ring focus:ring-blue-300;" />
        <p className="text-red-500 text-sm">{errors.phone?.message}</p>
      </div>

      <div>
        <label>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£</label>
        <select {...register("position")} className="w-full border px-3 py-2 rounded focus:outline-none focus:ring focus:ring-blue-300;">
          <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á --</option>
          <option value="frontend">Frontend Developer</option>
          <option value="backend">Backend Developer</option>
          <option value="fullstack">Full Stack Developer</option>
        </select>
        <p className="text-red-500 text-sm">{errors.position?.message}</p>
      </div>

      <div>
        <label>‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</label>
        <textarea {...register("experience")} className="w-full border px-3 py-2 rounded focus:outline-none focus:ring focus:ring-blue-300;" />
        <p className="text-red-500 text-sm">{errors.experience?.message}</p>
      </div>

      <div className="flex items-center space-x-2">
        <input type="checkbox" {...register("workPermit")} />
        <label>‡∏°‡∏µ‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏™‡∏¥‡∏á‡∏Ñ‡πÇ‡∏õ‡∏£‡πå</label>
      </div>

      {hasWorkPermit && (
        <div>
          <label>‡πÄ‡∏•‡∏Ç Work Permit</label>
          <input {...register("permitNumber")} className="w-full border px-3 py-2 rounded focus:outline-none focus:ring focus:ring-blue-300;" />
          <p className="text-red-500 text-sm">{errors.permitNumber?.message}</p>
        </div>
      )}

      <div className="flex items-center space-x-2">
        <input type="checkbox" {...register("agree")} />
        <label>‡∏â‡∏±‡∏ô‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô</label>
      </div>
      <p className="text-red-500 text-sm">{errors.agree?.message}</p>

      <button
        type="submit"
        disabled={isSubmitting}
        className="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700"
      >
        {isSubmitting ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á..." : "‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£"}
      </button>
    </form>
  );
}
